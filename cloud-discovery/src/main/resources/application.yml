#eureka服务注册中心集群配置
--- #注意这里是三个减号
spring:
  application:
    name: eureka-server1     #服务名称,自定义
  security:
    user:
      name: admin            #配置BASIC认证登录的账号
      password: 123456      #配置BASIC认证登录的密码
  profiles: peer1
server:
  port: 8081                #指定该Eureka实例的端口
eureka:
  instance:
    hostname: peer1
  client:
    register-with-eureka: true #是否禁止注册自身
    fetch-registry: true  #如果该服务没有注册到其他注册中心，则关闭从注册中心拉取服务列表； 如果是服务注册中心集群，需要开启，默认开启
    serviceUrl: #服务注册中心地址，http://账号:密码@主机名称:端口/Eureka/
      defaultZone: http://admin:123456@peer2:8082/eureka/,http://admin:123456@peer3:8083/eureka/
  server:
    renewalPercentThreshold: 0.49    #设置心跳正常的阀值，默认为1，测试时可以调低
---
spring:
  application:
    name: eureka-server2     #服务名称,自定义
  security:
    user:
      name: admin            #配置BASIC认证登录的账号
      password: 123456      #配置BASIC认证登录的密码
  profiles: peer2
server:
  port: 8082                #指定该Eureka实例的端口
eureka:
  instance:
    hostname: peer2
  client:
    register-with-eureka: true #是否禁止注册自身
    fetch-registry: true  #如果该服务没有注册到其他注册中心，则关闭从注册中心拉取服务列表； 如果是服务注册中心集群，需要开启，默认开启
    serviceUrl: #服务注册中心地址，http://账号:密码@主机名称:端口/Eureka/
      defaultZone: http://admin:123456@peer1:8081/eureka/,http://admin:123456@peer3:8083/eureka/
---
spring:
  application:
    name: eureka-server3     #服务名称,自定义
  security:
    user:
      name: admin            #配置BASIC认证登录的账号
      password: 123456      #配置BASIC认证登录的密码
    profiles: peer3
server:
  port: 8083               #指定该Eureka实例的端口
eureka:
  instance:
    hostname: peer3
  client:
    register-with-eureka: true #是否禁止注册自身
    fetch-registry: true  #如果该服务没有注册到其他注册中心，则关闭从注册中心拉取服务列表； 如果是服务注册中心集群，需要开启，默认开启
    serviceUrl: #服务注册中心地址，http://账号:密码@主机名称:端口/Eureka/
      defaultZone: http://admin:123456@peer1:8081/eureka/,http://admin:123456@peer2:8082/eureka/